---
# Add this variable to your ansible/vars/overrides.yml if needed
# This is array of tasks to exclude from dev role.
# For list of tasks see: dev/tasks/main.yml or see README.md
dev_tasks_exclude: []

# RVM / Ruby
rvm1_ansible_role_version: 2.2.0 # Version of https://github.com/rvm/rvm1-ansible
rvm1_rubies:
  - ruby-2.7.6
  - ruby-3.1.3
rvm1_user: "{{ ansible_user_id }}"

# Puppet
puppet_version: latest
puppet_lint_version: latest
puppet_rubies:
  - all # to install only for specific rubies, list their names (must match `rvm1_rubies`)
# Example:
# puppet_rubies:
#   - ruby-2.7.6
#   - ruby-3.1.2

# PDK (Puppet Development KIT)
# Please note the module does not support package downgrades - if PDK is already installed in higher version, remove it first.
pdk_version: latest

# NVM (Node Version Manager)
nvm_version: latest
node_version: 'lts/gallium'

# Ansible
ansible_pip_version: latest
ansible_lint_pip_version: latest

# Neovim
neovim_version: latest

# LunarVIM
lunarvim_url: https://github.com/lunarvim/lunarvim.git
lunarvim_home: "{{ ansible_env.HOME }}/.local/opt/lunarvim"
lunarvim_version: master # `master` is latest release, `rolling` is latest snapshot. Otherwise, set to explicit tag (see Github page)

# Puppet
puppet_pes_url: https://github.com/puppetlabs/puppet-editor-services.git
puppet_pes_version: main

# SDK Man
sdkman_update: true
sdkman_user: "{{ ansible_user_id }}"
sdkman_group: "{{ ansible_user_gid }}"
sdkman_user_home_dir: "{{ ansible_env.HOME }}"
sdkman_dir: "{{ sdkman_user_home_dir + '/.sdkman' }}"
sdkman_tmp_dir: /tmp
sdkman_validate_ssl: true
sdkman_install_packages:
  - { candidate: java, version: '18.0.2-open' }
  - { candidate: gradle, version: '7.5.1' }
  - { candidate: groovy, version: '4.0.4' }
  - { candidate: maven, version: '3.8.6' }
sdkman_uninstall_packages: []
# sdkman_uninstall_packages:
#   - { candidate: java, version: 6u45 }
# Configure default candidate versions
sdkman_defaults:
  java: '18.0.2-open'
  gradle: '7.5.1'
  groovy: '4.0.4'
  maven: '3.8.6'
# Flush caches before/after installing SDK packages
# Reference: http://sdkman.io/usage (Flush section)
sdkman_flush_caches_before: []
sdkman_flush_caches_after: []
# Link SDKMAN installed packages
# Reference: https://linux.die.net/man/8/update-alternatives
sdkman_update_alternatives: []

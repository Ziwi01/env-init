# Additional Ansible language tools
---
#
# Ansible Language Server
# Source: https://github.com/ansible/ansible-language-server
#
- name: "[Ansible] Get NPM version string"
  shell: "source {{ ansible_env.HOME }}/.local/opt/nvm/nvm.sh || echo 'nvm.sh cannot be found in this directory'; nvm list current | grep -E 'v[0-9]*\\.[0-9]*\\.[0-9]*' -o || echo 'Cannot get current NVM version'"
  args:
    executable: /bin/bash
  register: npm_version

- name: "[Ansible] Install Ansible Language server for current NPM"
  shell: "npm install @ansible/ansible-language-server --location=global"
  environment:
    PATH: "{{ ansible_env.HOME }}/.local/opt/nvm/versions/node/{{ npm_version.stdout }}/bin:{{ ansible_env.PATH }}"
  changed_when: false

#
# ansible-lint
#
- name: "[Ansible] Install Ansible PIP specific version"
  pip:
    name: "ansible=={{ ansible_pip_version }}"
    executable: pip3
  register: pip_out
  changed_when: "'Requirement already up-to-date' not in pip_out.stdout"
  when: ansible_pip_version != 'latest'

- name: "[Ansible] Install Ansible PIP latest version"
  pip:
    name: "ansible"
    executable: pip3
    extra_args: --upgrade
  register: pip_out
  changed_when: "'Requirement already up-to-date' not in pip_out.stdout"
  when: ansible_pip_version == 'latest'

- name: "[Ansible] Install ansible-lint PIP specific version"
  pip:
    name: "ansible-lint=={{ ansible_lint_pip_version }}"
    executable: pip3
  register: pip_out
  changed_when: "'Requirement already up-to-date' not in pip_out.stdout"
  when: ansible_lint_pip_version != 'latest'

- name: "[Ansible] Install ansible-lint PIP latest version"
  pip:
    name: "ansible-lint"
    executable: pip3
    extra_args: --upgrade
  register: pip_out
  changed_when: "'Requirement already up-to-date' not in pip_out.stdout"
  when: ansible_lint_pip_version == 'latest'

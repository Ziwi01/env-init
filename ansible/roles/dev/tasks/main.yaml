---
# Set dev software versions fact, will be updated in the tasks above, then printed at the end of play
- name: "[DEV] Reset dev versions fact"
  set_fact:
    used_dev_versions: {}
    cacheable: true

# Import vars for Ubuntu 20.04 / 22.04
- name: '[DEV] Include OS-specific vars files'
  ansible.builtin.include_vars: "Ubuntu-{{ ansible_lsb.release }}.yml"

# Include override variables
- name: "[DEV] Include ansible/vars/overrides.yml"
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ playbook_dir }}/vars/overrides.yml"
      skip: true

# Ruby Version Manager
- name: "[DEV] Install Ruby Version Manager"
  include_tasks: rvm.yml
  when: "'rvm' not in dev_tasks_exclude"

# SDKMan!
- name: "[DEV] Install SDKMAN!"
  include_tasks: sdkman.yml
  when: "'sdkman' not in dev_tasks_exclude"

# Node Version Manager
- name: "[DEV] Install Node Version Manager"
  include_tasks: nvm.yml # Dependency for lvim.yml
  when: "'nvm' not in dev_tasks_exclude"

# Rust
- name: "[DEV] Install Rust language with Cargo"
  include_tasks: rust.yml # Dependency for lvim.yml
  when: "'rust' not in dev_tasks_exclude"

# Ansible PIP
- name: "[DEV] Install Ansible"
  include_tasks: ansible.yml
  when: "'ansible' not in dev_tasks_exclude"

# Neovim
- name: "[DEV] Install Neovim"
  include_tasks: neovim.yml
  when: "'neovim' not in dev_tasks_exclude"

# LunarVIM
- name: "[DEV] Install LunarVIM"
  include_tasks: lunarvim.yml
  when: "'lunarvim' not in dev_tasks_exclude"

# Puppet
- name: "[DEV] Install Puppet"
  include_tasks: puppet.yml
  when: "'puppet' not in dev_tasks_exclude"

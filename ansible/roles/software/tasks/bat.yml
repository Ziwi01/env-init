---
# BAT (cat replacement)
# For usage see README.md
#
# Source: https://github.com/sharkdp/bat

- name: "[BAT] Check installed BAT version"
  ansible.builtin.command: dpkg-query -W bat
  register: bat_check_deb
  ignore_errors: true
  changed_when: bat_check_deb.rc > 1
  failed_when: bat_check_deb.rc > 1
  tags:
    - versions

- name: "[BAT] Get Github URL for proper version"
  vars:
    app: bat
    repo: sharkdp/bat
    version_query: curl -s https://api.github.com/repos/sharkdp/bat/releases/latest | jq .name -r | cut -f2 -d'v'
    github_uri: v{{ bat_version }}/bat_{{ bat_version }}_amd64.deb
  ansible.builtin.include_role:
    name: common
    tasks_from: github_version.yml
  tags:
    - versions

- name: "Installation"
  when: bat_check_deb.stdout | regex_search('[0-9]+\.[0-9]+\.[0-9]+') | default(0) != bat_version
  block:
    - name: "[BAT] Create directory in {{ ansible_env.HOME }}/.local/opt"
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.local/opt/bat-{{ bat_version }}"
        state: directory
        mode: '0755'

    - name: "[BAT] Download BAT {{ bat_version }}"
      ansible.builtin.get_url:
        url: "{{ bat_url }}"
        dest: "{{ ansible_env.HOME }}/.local/opt/bat-{{ bat_version }}"
        mode: '0755'

    - name: "[BAT] Install {{ bat_version }} .deb package"
      ansible.builtin.apt:
        deb: "{{ ansible_env.HOME }}/.local/opt/bat-{{ bat_version }}/bat_{{ bat_version }}_amd64.deb"
      become: true

- name: "[BAT] Save used version"
  vars:
    app: bat
    target_version:
      github_packages:
        bat: "{{ bat_version }}"
    query: ".github_packages.bat = \"{{ bat_version }}\""
  ansible.builtin.include_role:
    name: common
    tasks_from: save_version.yml
  tags:
    - versions

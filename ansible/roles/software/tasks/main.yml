---
# Ensure local bin/opt directories are there
- name: "[Software] Ensure dotted directories are there"
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - .local/bin
    - .local/opt
    - .config
    - .lsp
  tags:
    - always

# Include override variables
- name: "[Software] Include ansible/vars/overrides.yml"
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ playbook_dir }}/vars/overrides.yml"
      skip: true
  tags:
    - always

# Set software versions fact, will be updated in the tasks above, then printed at the end of play
- name: "[Software] Reset software versions fact"
  ansible.builtin.set_fact:
    used_software_versions: {}
    cacheable: true
  tags:
    - always

# Install `yq` YAML parser
# Used for editing YAML files for versions and release purposes.
- name: "[Software] Install yq"
  ansible.builtin.include_tasks:
    file: yq.yml
    apply:
      tags:
        - always
        - yq
  tags:
    - always
    - yq

# Common software
- name: "[Software] Install packages"
  ansible.builtin.include_tasks:
    file: packages.yml
    apply:
      tags:
        - software
        - software_packages
  when: "'packages' not in software_tasks_exclude"
  tags:
    - software
    - software_packages

# Latest GIT
- name: "[Software] Install git"
  ansible.builtin.include_tasks:
    file: git.yml
    apply:
      tags:
        - software
        - git
  when: "'git' not in software_tasks_exclude"
  tags:
    - software
    - git

# ripgrep
- name: "[Software] Install ripgrep"
  ansible.builtin.include_tasks:
    file: ripgrep.yml
    apply:
      tags:
        - software
        - ripgrep
  when: "'ripgrep' not in software_tasks_exclude"
  tags:
    - software
    - ripgrep

# FD
- name: "[Software] Install fd"
  ansible.builtin.include_tasks:
    file: fd.yml
    apply:
      tags:
        - software
        - fd
  when: "'fd' not in software_tasks_exclude"
  tags:
    - software
    - fd

# ls-with-git-status
- name: "[Software] Install lsg"
  ansible.builtin.include_tasks:
    file: lsg.yml
    apply:
      tags:
        - software
        - lsg
  when: "'lsg' not in software_tasks_exclude"
  tags:
    - software
    - lsg

# FZF (fuzzy-finder)
- name: "[Software] Install fzf"
  ansible.builtin.include_tasks:
    file: fzf.yml
    apply:
      tags:
        - software
        - fzf
  when: "'fzf' not in software_tasks_exclude"
  tags:
    - software
    - fzf

# Diff-so-fancy
- name: "[Software] Install diff-so-fancy"
  ansible.builtin.include_tasks:
    file: diff-so-fancy.yml
    apply:
      tags:
        - software
        - diff-so-fancy
  when: "'diff-so-fancy' not in software_tasks_exclude"
  tags:
    - software
    - diff-so-fancy

# Git-fuzzy
- name: "[Software] Install git-fuzzy"
  ansible.builtin.include_tasks:
    file: git-fuzzy.yml
    apply:
      tags:
        - software
        - git-fuzzy
  when: "'git-fuzzy' not in software_tasks_exclude"
  tags:
    - software
    - git-fuzzy

# LazyGIT
- name: "[Software] Install lazygit"
  ansible.builtin.include_tasks:
    file: lazygit.yml
    apply:
      tags:
        - software
        - lazygit
  when: "'lazygit' not in software_tasks_exclude"
  tags:
    - software
    - lazygit

# Gita
- name: "[Software] Install gita"
  ansible.builtin.include_tasks:
    file: gita.yml
    apply:
      tags:
        - software
        - gita
  when: "'gita' not in software_tasks_exclude"
  tags:
    - software
    - gita

# thefuck
- name: "[Software] Install thefuck"
  ansible.builtin.include_tasks:
    file: thefuck.yml
    apply:
      tags:
        - software
        - thefuck
  when: "'thefuck' not in software_tasks_exclude"
  tags:
    - software
    - thefuck

# BAT
- name: "[Software] Install bat"
  ansible.builtin.include_tasks:
    file: bat.yml
    apply:
      tags:
        - software
        - bat
  when: "'bat' not in software_tasks_exclude"
  tags:
    - software
    - bat

# Zoxide
- name: "[Software] Install zoxide"
  ansible.builtin.include_tasks:
    file: zoxide.yml
    apply:
      tags:
        - software
        - zoxide
  when: "'zoxide' not in software_tasks_exclude"
  tags:
    - software
    - zoxide

# Helm
- name: "[Software] Install helm"
  ansible.builtin.include_tasks:
    file: helm.yml
    apply:
      tags:
        - software
        - helm
  when: "'helm' not in software_tasks_exclude"
  tags:
    - software
    - helm

# ZSH
- name: "[Software] Install zsh"
  ansible.builtin.include_tasks:
    file: zsh.yml
    apply:
      tags:
        - software
        - zsh
  when: "'zsh' not in software_tasks_exclude"
  tags:
    - software
    - zsh

# Win32yank (windows clipboard support for Neovim)
- name: "[Software] Install w32yank"
  ansible.builtin.include_tasks:
    file: w32yank.yml
    apply:
      tags:
        - software
        - w32yank
  when: "'w32yank' not in software_tasks_exclude"
  tags:
    - software
    - w32yank

# TMUX Plugins
- name: "[Software] Install tmux"
  ansible.builtin.include_tasks:
    file: tmux.yml
    apply:
      tags:
        - software
        - tmux
  when: "'tmux' not in software_tasks_exclude"
  tags:
    - software
    - tmux

- name: "[Software] Docker"
  ansible.builtin.include_tasks:
    file: docker.yml
    apply:
      tags:
        - software
        - docker
  when: "'docker' not in software_tasks_exclude"
  tags:
    - software
    - docker

- name: "[Software] Kubernetes"
  ansible.builtin.include_tasks:
    file: kubernetes.yml
    apply:
      tags:
        - software
        - kubernetes
  when: "'kubernetes' not in software_tasks_exclude"
  tags:
    - software
    - kubernetes

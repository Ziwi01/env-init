---
# Add this variable to your ansible/vars/overrides.yml if needed
# This is array of tasks to exclude from software role.
# For list of tasks see: software/tasks/main.yml or see README.md
software_tasks_exclude: []

# System manager to use. Ansible has issues detecting SysV vs. SystemD on WSL distributions
# If you are using SysVInit WSL (not recommended, see `README.md`), overwrite this in `ansible/vars/overrides.yml` to `sysvinit`
service_manager: systemd

# Default packages to be installed first, using APT
# There is no version here as those are Ubuntu distro defaults always
default_apt_packages:
  - curl
  - unzip
  - mlocate
  - tree
  - htop
  - jq
  - gcc
  - zip
  - dos2unix
  - php
  - composer
  - keychain
  - groff # Required for AWS CLI
  - libevent-dev # v Required for latest Tmux install
  - universal-ctags # v Required for latest Tmux install
  - ncurses-dev # v Required for latest Tmux install

# Specific versions for software (github)
# Fixed versions should be set without `v` prefix (e.g: 1.4.3)
github_packages:
  diff_so_fancy: latest
  bat: latest
  zoxide: latest
  helm: latest
  git: latest
  lazygit: latest
  fzf: latest
  tmux: latest
  ripgrep: latest
  fd: latest
  kind: latest
  k9s: latest
  yq: latest
  win32yank: latest
  nvm: latest

# Kubectl version
kubectl_version: latest

# Packages and their versions to install with PIP
pip_packages:
  thefuck: latest
  gita: latest

# FZF
fzf_git_url: "https://github.com/junegunn/fzf.git"
fzf_home: "{{ ansible_env.HOME }}/.fzf"

# Git from custom PPA repo
git_apt_version: latest

# GIT Fuzzy
git_fuzzy_url: "https://github.com/bigH/git-fuzzy.git"
git_fuzzy_home: "{{ ansible_env.HOME }}/.local/opt/git-fuzzy"
git_fuzzy_version: "master" # Branch name or commit - git-fuzzy does not have releases

# Oh-My-Zsh
omz_home: "{{ ansible_env.HOME }}/.oh-my-zsh"
omz_plugins:
  fzf-tab: https://github.com/Aloxaf/fzf-tab
  k: https://github.com/supercrabtree/k
  you-should-use: https://github.com/MichaelAquilina/zsh-you-should-use.git
  zsh-autosuggestions: https://github.com/zsh-users/zsh-autosuggestions
  zsh-syntax-highlighting: https://github.com/zsh-users/zsh-syntax-highlighting.git
  zsh-sdkman: https://github.com/matthieusb/zsh-sdkman.git
  zsh-lazyload: https://github.com/qoomon/zsh-lazyload
  pyenv-lazy: https://github.com/davidparsson/zsh-pyenv-lazy.git
  zsh-snv: https://github.com/rpeshkov/zsh-snv

# P10k version
p10k_version: master

# TMUX Plugin Manager
tmux_plugins_dir: "{{ ansible_env.HOME }}/.tmux/plugins"
tpm_git_url: https://github.com/tmux-plugins/tpm.git
tpm_version: master

# Docker system dependency packages
docker_apt_dependencies:
  - ca-certificates
  - gnupg
  - lsb-release

# Docker main packages from APT repo
docker_apt_packages:
  docker-ce: latest
  docker-ce-cli: latest
  containerd.io: latest
  docker-compose-plugin: latest

# RVM / Ruby
rvm1_ansible_role_version: 2.2.0 # Version of https://github.com/rvm/rvm1-ansible
# rvm1_rubies: # Moved to OS-specific vars file
#   - ruby-3.1.3
rvm1_user: "{{ ansible_user_id }}"

# Puppet
# puppet_version: 7.21.0 # Moved to OS-specific vars file
# puppet_lint_version: 3.0.1 # Moved to OS-specific vars file
puppet_rubies:
  - all # to install only for specific rubies, list their names (must match `rvm1_rubies` - see OS-specific vars files)
# Example:
# puppet_rubies:
#   - ruby-2.7.6
#   - ruby-3.1.2

# Ruby
# Install any gem for any ruby. `all` installs for all of them
# Specific ruby must match one from `rvm_rubies` list (see OS-specific vars file)
# You need to set specific gem version, `latest` is not supported here
ruby_gems:
  - ruby: all
    gems:
      - neovim: 0.9.0

# PDK (Puppet Development KIT)
# Please note the module does not support package downgrades - if PDK is already installed in higher version, remove it first.
pdk_version: latest

# NVM (Node Version Manager)
nvm_version: latest
node_version: 'lts/gallium'

# Ansible
ansible_pip_version: latest
ansible_lint_pip_version: latest

# Neovim
neovim_version: latest

# LunarVIM
lunarvim_url: https://github.com/lunarvim/lunarvim.git
lunarvim_home: "{{ ansible_env.HOME }}/.local/opt/lunarvim"
lunarvim_version: master # `master` is latest release, `rolling` is latest snapshot. Otherwise, set to explicit tag (see Github page)

# Puppet
puppet_pes_url: https://github.com/puppetlabs/puppet-editor-services.git
puppet_pes_version: main

# SDK Man
sdkman_update: true
sdkman_user: "{{ ansible_user_id }}"
sdkman_group: "{{ ansible_user_gid }}"
sdkman_user_home_dir: "{{ ansible_env.HOME }}"
sdkman_dir: "{{ sdkman_user_home_dir + '/.sdkman' }}"
sdkman_tmp_dir: /tmp
sdkman_validate_ssl: true
sdkman_install_packages:
  - { candidate: java, version: '18.0.2-open' }
  - { candidate: java, version: '11.0.12-open' }
  - { candidate: gradle, version: '7.5.1' }
  - { candidate: groovy, version: '4.0.4' }
  - { candidate: maven, version: '3.9.0' }
sdkman_uninstall_packages: []
# sdkman_uninstall_packages:
#   - { candidate: java, version: 6u45 }
# Configure default candidate versions
sdkman_defaults:
  java: '11.0.12-open'
  gradle: '7.5.1'
  groovy: '4.0.4'
  maven: '3.9.0'
# Flush caches before/after installing SDK packages
# Reference: http://sdkman.io/usage (Flush section)
sdkman_flush_caches_before: []
sdkman_flush_caches_after: []
# Link SDKMAN installed packages
# Reference: https://linux.die.net/man/8/update-alternatives
sdkman_update_alternatives: []
